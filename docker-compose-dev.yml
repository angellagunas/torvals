version: '2.3'
services:
  admin:
    restart: always
    build:
      context: .
      dockerfile: DockerfileNginxAdmin
    ports:
      - "3001:80"
  web:
    restart: always
    build:
      context: .
      dockerfile: DockerfileNginxApp
    ports:
      - "3002:80"
  api:
    restart: always
    build: .
    ports:
     - "3000:3000"
    links:
      - mongodb
      - redisdb
    depends_on:
      - mongodb
      - redisdb
    env_file:
      - .env
    volumes:
      - ./media/uploads:/app/media/uploads
  queues:
    restart: always
    build:
      context: .
      dockerfile: DockerfileQueues
    links:
      - mongodb
      - redisdb
    depends_on:
      - mongodb
      - redisdb
    env_file:
      - .env
    volumes:
      - ./media/uploads:/app/media/uploads
  redisdb:
    restart: always
    image: "redis:alpine"
    ports:
      - "6380:6379"
  mongodb:
    restart: always
    image: mongo:latest
    container_name: "mongodb"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/db:/data/db
    ports:
        - 27017:27017
    command: mongod --smallfiles --logpath=/dev/null --wiredTigerCacheSizeGB 5 # --quiet
  pio:
    # image: pio-0.12.1
    build:
      context: .
      dockerfile: DockerfilePIO
    env_file:
      - .env
    volumes:
      - ./pio-code/env:/env
      - ./pio-code/engines:/engines
      - ./pio-code/data:/data
      - ./media/jsons:/app/media/jsons
    ports:
      - "7070:7070"
      - "9001:9000"
      - "8000-8060:8000-8060"
    links:
      - mongodb
      - redisdb
    depends_on:
      - mongodb
      - redisdb
#  neo4j:
#    image: 'neo4j:3.2.1'
#    ports:
#      - "7474:7474"
#      - "7687:7687"
#    restart:
#      always
#    volumes:
#      - $HOME/neo4j/data:/data
#      - $HOME/neo4j/logs:/logs
