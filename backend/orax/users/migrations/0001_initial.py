# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2019-03-11 21:01
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import orax.users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sales_centers', '__first__'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created date')),
                ('last_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='last modified')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='correo electronico')),
                ('name', models.CharField(max_length=45, verbose_name='nombre')),
                ('uuid', models.CharField(max_length=300)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('sale_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sales_centers.SaleCenter')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
            },
            managers=[
                ('objects', orax.users.models.UserManager()),
            ],
        ),
    ]
